CREATE TABLE students (
    id INT AUTO_INCREMENT PRIMARY KEY,
    first_name VARCHAR(100) NOT NULL,
    last_name VARCHAR(100) NOT NULL,
    email VARCHAR(150) NOT NULL,
    mobile VARCHAR(20) NOT NULL,
    inputAddress_current TEXT NOT NULL,
    inputAddress2_current TEXT NOT NULL,
    inputCity_current VARCHAR(100) NOT NULL,
    inputState_current VARCHAR(100) NOT NULL,
    inputZip_current VARCHAR(20) NOT NULL,
    inputAddress_permanent TEXT,
    inputAddress2_permanent TEXT,
    inputCity_permanent VARCHAR(100),
    inputState_permanent VARCHAR(100),
    inputZip_permanent VARCHAR(20),
    same_address VARCHAR(10) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);


CREATE TABLE teachers (
    id INT PRIMARY KEY AUTO_INCREMENT,
    first_name VARCHAR(100) NOT NULL,
    last_name VARCHAR(100) NOT NULL,
    email VARCHAR(150) NOT NULL,
    mobile1 VARCHAR(20) NOT NULL,
    mobile2 VARCHAR(20) NOT NULL,
    inputAddress_current TEXT NOT NULL,
    inputAddress2_current TEXT NOT NULL,
    inputCity_current VARCHAR(100) NOT NULL,
    inputState_current VARCHAR(100) NOT NULL,
    inputZip_current VARCHAR(20) NOT NULL,
    inputAddress_permanent TEXT NULL,
    inputAddress2_permanent TEXT NULL,
    inputCity_permanent VARCHAR(100) NULL,
    inputState_permanent VARCHAR(100) NULL,
    inputZip_permanent VARCHAR(20) NULL,
    same_address VARCHAR(10) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE parents (
    id INT AUTO_INCREMENT PRIMARY KEY,
    student_id INT NOT NULL,
    first_name VARCHAR(100) NOT NULL,
    last_name VARCHAR(100) NOT NULL,
    email VARCHAR(150) NOT NULL,
    mobile_primary VARCHAR(20) NOT NULL,
    mobile_secondary VARCHAR(20) NOT NULL,
    inputAddress_current TEXT NOT NULL,
    inputAddress2_current TEXT NOT NULL,
    inputCity_current VARCHAR(100) NOT NULL,
    inputState_current VARCHAR(100) NOT NULL,
    inputZip_current VARCHAR(20) NOT NULL,
    inputAddress_permanent TEXT DEFAULT NULL,
    inputAddress2_permanent TEXT DEFAULT NULL,
    inputCity_permanent VARCHAR(100) DEFAULT NULL,
    inputState_permanent VARCHAR(100) DEFAULT NULL,
    inputZip_permanent VARCHAR(20) DEFAULT NULL,
    same_address VARCHAR(10) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    
    CONSTRAINT fk_student FOREIGN KEY (student_id) REFERENCES students(id) ON DELETE CASCADE
);

CREATE TABLE students_parents (
    id INT AUTO_INCREMENT PRIMARY KEY,
    student_id INT NOT NULL,
    parent_id INT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,

    -- Foreign keys with unique names
    CONSTRAINT fk_students_parents_student FOREIGN KEY (student_id) REFERENCES students(id) ON DELETE CASCADE,
    CONSTRAINT fk_students_parents_parent FOREIGN KEY (parent_id) REFERENCES parents(id) ON DELETE CASCADE,

    -- Unique constraint to avoid duplicate relations
    UNIQUE KEY unique_student_parent (student_id, parent_id)
);

ALTER TABLE students
    MODIFY COLUMN inputState_current INT NOT NULL,
    MODIFY COLUMN inputState_permanent INT NOT NULL,
    MODIFY COLUMN inputCity_current INT NOT NULL,
    MODIFY COLUMN inputCity_permanent INT NOT NULL,

    ADD CONSTRAINT fk_inputState_current FOREIGN KEY (inputState_current) REFERENCES states(id) ON DELETE RESTRICT ON UPDATE CASCADE,
    ADD CONSTRAINT fk_inputState_permanent FOREIGN KEY (inputState_permanent) REFERENCES states(id) ON DELETE RESTRICT ON UPDATE CASCADE,
    ADD CONSTRAINT fk_inputCity_current FOREIGN KEY (inputCity_current) REFERENCES cities(id) ON DELETE RESTRICT ON UPDATE CASCADE,
    ADD CONSTRAINT fk_inputCity_permanent FOREIGN KEY (inputCity_permanent) REFERENCES cities(id) ON DELETE RESTRICT ON UPDATE CASCADE;


CREATE TABLE classes (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    div_name VARCHAR(10) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

INSERT INTO classes (name, div) VALUES
('1', 'A'),
('1', 'B'),
('2', 'A'),
('2', 'B'),
('3', 'A'),
('3', 'B'),
('4', 'A'),
('4', 'B'),
('5', 'A'),
('5', 'B'),
('6', 'A'),
('6', 'B'),
('7', 'A'),
('7', 'B'),
('8', 'A'),
('8', 'B'),
('9', 'A'),
('9', 'B'),
('10', 'A'),
('10', 'B'),
('11', 'A'),
('11', 'B'),
('12', 'A'),
('12', 'B');

ALTER TABLE students
ADD COLUMN class_id INT AFTER email,
ADD CONSTRAINT fk_class_id FOREIGN KEY (class_id) REFERENCES classes(id);